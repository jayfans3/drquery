public void SMS_CUR_1(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){
		
		String code = "";
		String SRC_START_TIME=rowData.get(Constants.SRC_START_TIME);
		if(SRC_START_TIME.compareTo("20120401000000")>0){
			code="48000080";
		}else{
			code="42000450";
		}
		String desc = "短信通信费(单位:元)";
		double val = 0;
		
		if(!isHistory || (isHistory && hisQueryType == 1)){
//			return (SRC_CALL_TYPE ==4 or SRC_CALL_TYPE==5)
			String SRC_CALL_TYPE=rowData.get(Constants.SRC_CALL_TYPE);
			if("4".equals(SRC_CALL_TYPE) || "5".equals(SRC_CALL_TYPE)){
//				return  (SRC_BASIC_CHARGE + SRC_TOLL_CHARGE + SRC_INFO_CHARGE)/100
				val=(NumberUtils.parseDouble(rowData.get(Constants.SRC_BASIC_CHARGE))+NumberUtils.parseDouble(rowData.get(Constants.SRC_TOLL_CHARGE))
						+NumberUtils.parseDouble(rowData.get(Constants.SRC_INFO_CHARGE)))/100;
			}
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}

	public void SMS_CUR_2(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){
//		if SRC_START_TIME >= "20120401000000" then
//				  return '48000070'
//			else
//				  return '42000330'
//			end
		String code = "";
		String SRC_START_TIME=rowData.get(Constants.SRC_START_TIME);
		if(SRC_START_TIME.compareTo("20120401000000")>0){
			code="48000070";
		}else{
			code="42000330";
		}
		String desc="彩信通信费(单位:元)";
		double val = 0;

		if(!isHistory || (isHistory && hisQueryType == 1)){
//			return (SRC_CALL_TYPE ==12 or SRC_CALL_TYPE==13)
			String SRC_CALL_TYPE=rowData.get(Constants.SRC_CALL_TYPE);
			if("12".equals(SRC_CALL_TYPE) || "13".equals(SRC_CALL_TYPE)){
//				return  (SRC_BASIC_CHARGE + SRC_TOLL_CHARGE + SRC_INFO_CHARGE)/100
				val=(NumberUtils.parseDouble(rowData.get(Constants.SRC_BASIC_CHARGE))+NumberUtils.parseDouble(rowData.get(Constants.SRC_TOLL_CHARGE))
						+NumberUtils.parseDouble(rowData.get(Constants.SRC_INFO_CHARGE)))/100;
			}
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	
	public void SMS_CUR_3(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){
		
		String code = "48000000";
		String desc = "139手机邮箱短彩信费(单位:元)";
		double val = 0;
		
		if(!isHistory || (isHistory && hisQueryType == 1)){
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	
	public void SMS_CUR_4(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){
		
		String code = "48000010";
		String desc = "会易通短彩信费(单位:元)";
		double val = 0;
		
		if(!isHistory || (isHistory && hisQueryType == 1)){
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	
	public void SMS_CUR_5(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){
		
		String code = "48000020";
		String desc = "手机钱包短彩信费(单位:元)";
		double val = 0;
		
		if(!isHistory || (isHistory && hisQueryType == 1)){
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	
	public void SMS_CUR_6(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){
		
		String code = "48000030";
		String desc = "e讯短彩信费(单位:元)";
		double val = 0;
		
		if(!isHistory || (isHistory && hisQueryType == 1)){
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	
	public void SMS_CUR_7(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){
		
		String code = "48000040";
		String desc = "移动新视界短彩信费(单位:元)";
		double val = 0;
		
		if(!isHistory || (isHistory && hisQueryType == 1)){
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	
	public void SMS_CUR_8(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){
		
		String code = "48000050";
		String desc = "企业通信助理短信费(单位:元)";
		double val = 0;
		
		if(!isHistory || (isHistory && hisQueryType == 1)){
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	
	public void SMS_CUR_9(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){
		
		String code = "48000060";
		String desc = "企业通信助理彩信费(单位:元)";
		double val = 0;
		
		if(!isHistory || (isHistory && hisQueryType == 1)){
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	
	public void SMS_CUR_10(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){
		
		String code = "48000090";
		String desc = "企业自建短信平台端口费(单位:元)";
		double val = 0;
		
		if(!isHistory || (isHistory && hisQueryType == 1)){
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	
	public void SMS_CUR_11(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){
		
		String code = "48000100";
		String desc = "集团短信通信费(单位:元)";
		double val = 0;
		
		if(!isHistory || (isHistory && hisQueryType == 1)){
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	
	public void SMS_CUR_12(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){
		
		String code = "48000110";
		String desc = "集团彩信通信费(单位:元)";
		double val = 0;
		
		if(!isHistory || (isHistory && hisQueryType == 1)){
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	
	public void SMS_CUR_13(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){
		
		String code = "48000120";
		String desc = "400挂机短信通信费(单位:元)";
		double val = 0;
		
		if(!isHistory || (isHistory && hisQueryType == 1)){
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	
	public void SMS_CUR_14(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){
		
		String code = "48080";
		String desc = "短信接收(单位:条)";
		Integer val = 0;
		
		if(!isHistory || (isHistory && hisQueryType == 1)){
//			return SRC_CALL_TYPE == 5
			String SRC_CALL_TYPE=rowData.get(Constants.SRC_CALL_TYPE);
			if("5".equals(SRC_CALL_TYPE)){
				val=1;
			}
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	
	public void SMS_CUR_15(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){
		
		String code = "48081";
		String desc = "短信发送(单位:条)";
		Integer val = 0;
		
		if(!isHistory || (isHistory && hisQueryType == 1)){
			if("4".equals(rowData.get(Constants.SRC_CALL_TYPE))){
				val=1;
			}
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	
	public void SMS_CUR_16(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){
		
		String code = "48082";
		String desc = "彩信接收(单位:条)";
		Integer val = 0;
		
		if(!isHistory || (isHistory && hisQueryType == 1)){
			if("13".equals(rowData.get(Constants.SRC_CALL_TYPE))){
				val=1;
			}
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	
	public void SMS_CUR_17(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){
		
		String code = "48083";
		String desc = "彩信发送(单位:条)";
		Integer val = 0;
		
		if(!isHistory || (isHistory && hisQueryType == 1)){
			if("12".equals(rowData.get(Constants.SRC_CALL_TYPE))){
				val=1;
			}
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	
	public void SMS_CUR_90(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){
		
/*//		if SRC_CALL_TYPE == 4 or SRC_CALL_TYPE == 5 then
//		 return  SRC_FREERES_CODE
//		end
		String code = "";
		String SRC_CALL_TYPE=rowData.get(Constants.SRC_CALL_TYPE);
		String SRC_FREERES_CODE=rowData.get(Constants.SRC_FREERES_CODE);
		if("4".equals(SRC_CALL_TYPE) || "5".equals(SRC_CALL_TYPE)){
			code=SRC_FREERES_CODE;
		}
//		if tabFreeCode[SRC_FREERES_CODE]~=nil then
//				  if tabFreeCode[SRC_FREERES_CODE]["FREERES_TYPE"] == 1 then
//				    return  tabFreeCode[SRC_FREERES_CODE]['FREERES_NAME'] +'(单位:**小时**分**秒)'
//				  elseif tabFreeCode[SRC_FREERES_CODE]["FREERES_TYPE"] == 2 then
//				    return  tabFreeCode[SRC_FREERES_CODE]['FREERES_NAME']..'(单位:次)'
//				  elseif tabFreeCode[SRC_FREERES_CODE]["FREERES_TYPE"] == 3 then
//				    return  tabFreeCode[SRC_FREERES_CODE]['FREERES_NAME']..'(单位:**MB**KB)'
//				  elseif tabFreeCode[SRC_FREERES_CODE]["FREERES_TYPE"] == 4 then
//				    return  tabFreeCode[SRC_FREERES_CODE]['FREERES_NAME']..'(单位:元)'
//				  else
//				    return  tabFreeCode[SRC_FREERES_CODE]['FREERES_NAME']..'(单位:条)'
//				  end
//				end
		String desc = "";
		if(CacheProvider.tabFreeCode(SRC_FREERES_CODE)){
			if("1".equals(CacheProvider.tabFreeCode("FREERES_TYPE", SRC_FREERES_CODE))){
				desc=CacheProvider.tabFreeCode("FREERES_NAME", SRC_FREERES_CODE)+"(单位:**小时**分**秒)";
			}else if("2".equals(CacheProvider.tabFreeCode("FREERES_TYPE", SRC_FREERES_CODE))){
				desc=CacheProvider.tabFreeCode("FREERES_NAME", SRC_FREERES_CODE)+"(单位:次)";
			}else if("3".equals(CacheProvider.tabFreeCode("FREERES_TYPE", SRC_FREERES_CODE))){
				desc=CacheProvider.tabFreeCode("FREERES_NAME", SRC_FREERES_CODE)+"(单位:**MB**KB)";
			}else if("2".equals(CacheProvider.tabFreeCode("FREERES_TYPE", SRC_FREERES_CODE))){
				desc=CacheProvider.tabFreeCode("FREERES_NAME", SRC_FREERES_CODE)+"(单位:元)";
			}else{
				desc=CacheProvider.tabFreeCode("FREERES_NAME", SRC_FREERES_CODE)+"(单位:条)";
			}
		}
		
		double val = 0;
		
		if(!isHistory || (isHistory && hisQueryType == 1)){
			String SRC_FREERES_VAL=rowData.get(Constants.SRC_FREERES_VAL);
				if(CacheProvider.tabFreeCode(SRC_FREERES_CODE)){
					if("1".equals(CacheProvider.tabFreeCode("FREERES_TYPE", SRC_FREERES_CODE)) || 
							"2".equals(CacheProvider.tabFreeCode("FREERES_TYPE", SRC_FREERES_CODE)) ||
							"3".equals(CacheProvider.tabFreeCode("FREERES_TYPE", SRC_FREERES_CODE))){
						val=NumberUtils.parseDouble(SRC_FREERES_VAL);
					}else if("4".equals(CacheProvider.tabFreeCode("FREERES_TYPE", SRC_FREERES_CODE))){
						val=NumberUtils.parseDouble(SRC_FREERES_VAL)/100;
					}else{
						val=NumberUtils.parseDouble(SRC_FREERES_VAL);
					}
				}
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}*/
		String SRC_CALL_TYPE = rowData.get(Constants.SRC_CALL_TYPE);
		if("4".equals(SRC_CALL_TYPE) || "5".equals(SRC_CALL_TYPE)){
			sumCURResources(rowData, request, bigType, sumType, sortIndex, stat);
		}
	}
	
	public void SMS_CUR_91(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){
		
		/*String SRC_CALL_TYPE=rowData.get(Constants.SRC_CALL_TYPE);
		String SRC_FREERES_CODE=rowData.get(Constants.SRC_FREERES_CODE);
		String code = "";
		if("12".equals(SRC_CALL_TYPE) || "13".equals(SRC_CALL_TYPE)){
			code=SRC_FREERES_CODE;
		}
		String desc = "";
		if(CacheProvider.tabFreeCode(SRC_FREERES_CODE)){
			if("1".equals(CacheProvider.tabFreeCode("FREERES_TYPE", SRC_FREERES_CODE))){
				desc=CacheProvider.tabFreeCode("FREERES_NAME", SRC_FREERES_CODE)+"(单位:**小时**分**秒)";
			}else if("2".equals(CacheProvider.tabFreeCode("FREERES_TYPE", SRC_FREERES_CODE))){
				desc=CacheProvider.tabFreeCode("FREERES_NAME", SRC_FREERES_CODE)+"(单位:次)";
			}else if("3".equals(CacheProvider.tabFreeCode("FREERES_TYPE", SRC_FREERES_CODE))){
				desc=CacheProvider.tabFreeCode("FREERES_NAME", SRC_FREERES_CODE)+"(单位:**MB**KB)";
			}else if("2".equals(CacheProvider.tabFreeCode("FREERES_TYPE", SRC_FREERES_CODE))){
				desc=CacheProvider.tabFreeCode("FREERES_NAME", SRC_FREERES_CODE)+"(单位:元)";
			}else{
				desc=CacheProvider.tabFreeCode("FREERES_NAME", SRC_FREERES_CODE)+"(单位:条)";
			}
		}
		
		double val = 0;
		
		if(!isHistory || (isHistory && hisQueryType == 1)){
			String SRC_FREERES_VAL=rowData.get(Constants.SRC_FREERES_VAL);
			if(CacheProvider.tabFreeCode(SRC_FREERES_CODE)){
				if("1".equals(CacheProvider.tabFreeCode("FREERES_TYPE", SRC_FREERES_CODE)) || 
						"2".equals(CacheProvider.tabFreeCode("FREERES_TYPE", SRC_FREERES_CODE)) ||
						"3".equals(CacheProvider.tabFreeCode("FREERES_TYPE", SRC_FREERES_CODE))){
					val=NumberUtils.parseDouble(SRC_FREERES_VAL);
				}else if("4".equals(CacheProvider.tabFreeCode("FREERES_TYPE", SRC_FREERES_CODE))){
					val=NumberUtils.parseDouble(SRC_FREERES_VAL)/100;
				}else{
					val=NumberUtils.parseDouble(SRC_FREERES_VAL);
				}
			}
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}*/
		String SRC_CALL_TYPE = rowData.get(Constants.SRC_CALL_TYPE);
		if("12".equals(SRC_CALL_TYPE) || "13".equals(SRC_CALL_TYPE)){
			sumCURResources(rowData, request, bigType, sumType, sortIndex, stat);
		}
	}
	//===================================================================================
	
	public void SMS_HIS_1(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		String code = "";
		String SRC_START_TIME=rowData.get(Constants.SRC_START_TIME);
		if(SRC_START_TIME.compareTo("20120401000000")>0){
			code="48000080";
		}else{
			code="42000450";
		}
		stat.addHisItem(code, resourceType, bigType, sortIndex);
	}
	
	public void SMS_HIS_2(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		String code = "";
		String SRC_START_TIME=rowData.get(Constants.SRC_START_TIME);
		if(SRC_START_TIME.compareTo("20120401000000")>0){
			code="48000070";
		}else{
			code="42000330";
		}
		stat.addHisItem(code, resourceType, bigType, sortIndex);
	}
	
	public void SMS_HIS_3(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		String code = "48000000";
		stat.addHisItem(code, resourceType, bigType, sortIndex);
	}
	
	public void SMS_HIS_4(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		String code = "48000010";
		stat.addHisItem(code, resourceType, bigType, sortIndex);
	}
	
	public void SMS_HIS_5(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		String code = "48000020";
		stat.addHisItem(code, resourceType, bigType, sortIndex);
	}
	
	public void SMS_HIS_6(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		String code = "48000030";
		stat.addHisItem(code, resourceType, bigType, sortIndex);
	}
	
	public void SMS_HIS_7(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		String code = "48000040";
		stat.addHisItem(code, resourceType, bigType, sortIndex);
	}
	
	public void SMS_HIS_8(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		String code = "48000050";
		stat.addHisItem(code, resourceType, bigType, sortIndex);
	}
	
	public void SMS_HIS_9(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		String code = "48000060";
		stat.addHisItem(code, resourceType, bigType, sortIndex);
	}
	
	public void SMS_HIS_10(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		String code = "48000090";
		stat.addHisItem(code, resourceType, bigType, sortIndex);
	}
	
	public void SMS_HIS_11(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		String code = "48000100";
		stat.addHisItem(code, resourceType, bigType, sortIndex);
	}
	
	public void SMS_HIS_12(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		String code = "48000110";
		stat.addHisItem(code, resourceType, bigType, sortIndex);
	}
	
	public void SMS_HIS_13(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		String code = "48000120";
		stat.addHisItem(code, resourceType, bigType, sortIndex);
	}
	
	public void SMS_HIS_90(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		String code = "";
		String SRC_CALL_TYPE=rowData.get(Constants.SRC_CALL_TYPE);
		String SRC_FREERES_CODE=rowData.get(Constants.SRC_FREERES_CODE);
		if("4".equals(SRC_CALL_TYPE) || "5".equals(SRC_CALL_TYPE)){
			//code=SRC_FREERES_CODE;
			sumHisResources(rowData,request, bigType, resourceType, sortIndex, stat);
		}
		//stat.addHisItem(code, resourceType, bigType, sortIndex);
	}
	
	public void SMS_HIS_91(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		String SRC_CALL_TYPE=rowData.get(Constants.SRC_CALL_TYPE);
		String SRC_FREERES_CODE=rowData.get(Constants.SRC_FREERES_CODE);
		String code = "";
		if("12".equals(SRC_CALL_TYPE) || "13".equals(SRC_CALL_TYPE)){
			//code=SRC_FREERES_CODE;
			sumHisResources(rowData,request, bigType, resourceType, sortIndex, stat);
		}
		//stat.addHisItem(code, resourceType, bigType, sortIndex);
	}