public void GSM_CUR_1(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){
		String code =  "45000200";
		String desc = "本地基本通话费(单位:元)";
		double val = 0;
		if(!isHistory || (isHistory && hisQueryType == 1)){	
			String roamType = rowData.get(Constants.SRC_ROAM_TYPE);
			String SERVICE_TYPE =  rowData.get(Constants.SRC_SERVICE_TYPE);
			int serviceType = NumberUtils.parseInt(SERVICE_TYPE);
			if( ("1".equals(roamType) ||  "5".equals(roamType) ||  "6".equals(roamType)) 
					&& serviceType != 19 && serviceType != 7 && serviceType != 4 && serviceType != 8){
				val = NumberUtils.parseDouble(rowData.get(Constants.SRC_BASIC_CHARGE))/100;	
			}
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	public void GSM_HIS_1(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		String code = "45000200";		
		stat.addHisItem(code, resourceType, bigType, sortIndex);
	}
	
	public void  GSM_CUR_2(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){		
		String code =  "45000190";
		String desc = "本地国内（不含港澳台）长途费(单位:元)";
		double val = 0;
		if(!isHistory || (isHistory && hisQueryType == 1)){		
			String roamType = rowData.get(Constants.SRC_ROAM_TYPE);
			String SERVICE_TYPE =  rowData.get(Constants.SRC_SERVICE_TYPE);
			int serviceType = NumberUtils.parseInt(SERVICE_TYPE);
			if ("1".equals(rowData.get(Constants.SRC_EXTEND_ATTR_SHORTCODE1)) || "2".equals(rowData.get(Constants.SRC_USER_TYPE))) {
				if( ("1".equals(roamType) ||  "5".equals(roamType) ||  "6".equals(roamType)) 
						&& serviceType !=9  && serviceType!=4 && "1".equals(rowData.get(Constants.SRC_HPLMN3))){
					val = NumberUtils.parseDouble(rowData.get(Constants.SRC_TOLL_CHARGE ))/100;	
				}
			}else{
				if( ("1".equals(roamType) ||  "5".equals(roamType) ||  "6".equals(roamType)) && serviceType !=9  && serviceType!=4){
					val = NumberUtils.parseDouble(rowData.get(Constants.SRC_TOLL_CHARGE ))/100;
				}
			}			
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	public void GSM_HIS_2(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		String code = "45000190";		
		stat.addHisItem(code, resourceType, bigType, sortIndex);
	}
	
	public void  GSM_CUR_3(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){		
		String code =  "45000560";
		String desc = "国内（不含港澳台）漫游通话费(单位:元)";
		double val = 0;
		if(!isHistory || (isHistory && hisQueryType == 1)){
			String roamType = rowData.get(Constants.SRC_ROAM_TYPE);
			String SERVICE_TYPE =  rowData.get(Constants.SRC_SERVICE_TYPE);
			String hplmn3 = rowData.get(Constants.SRC_HPLMN3);
			int serviceType = NumberUtils.parseInt(SERVICE_TYPE);
			if ("1".equals(rowData.get(Constants.SRC_EXTEND_ATTR_SHORTCODE1)) || "2".equals(rowData.get(Constants.SRC_USER_TYPE))) {
				if(("2".equals(roamType) || "3".equals(roamType)) && serviceType!=4
						&& (serviceType!=9 || (serviceType!=19 && serviceType!=21))
						&& (!"2".equals(hplmn3) && !"3".equals(hplmn3))){
					val = (NumberUtils.parseDouble(rowData.get(Constants.SRC_BASIC_CHARGE ))+
							NumberUtils.parseDouble(rowData.get(Constants.SRC_TOLL_CHARGE)))/100;
				}
			}else{
				if(("2".equals(roamType) || "3".equals(roamType)) && serviceType!=4
						&& (serviceType!=9 || (serviceType!=19 && serviceType!=21))){
					val = (NumberUtils.parseDouble(rowData.get(Constants.SRC_BASIC_CHARGE ))+
							NumberUtils.parseDouble(rowData.get(Constants.SRC_TOLL_CHARGE)))/100;	
				}
			}
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	public void GSM_HIS_3(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		String code = "45000560";		
		stat.addHisItem(code, resourceType, bigType, sortIndex);
	}
	public void  GSM_CUR_4(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){		
		String code =  "45000530";
		String desc = "国际长途费(单位:元)";
		double val = 0;
		if(!isHistory || (isHistory && hisQueryType == 1)){
			if ("1".equals(rowData.get(Constants.SRC_EXTEND_ATTR_SHORTCODE1)) || "2".equals(rowData.get(Constants.SRC_USER_TYPE))) {
				if("4".equals(rowData.get(Constants.SRC_ROAM_TYPE)) || "2".equals(rowData.get(Constants.SRC_HPLMN3))) {
					val = NumberUtils.parseDouble(rowData.get(Constants.SRC_TOLL_CHARGE))/100;	
				}
			}else{
				if("4".equals(rowData.get(Constants.SRC_ROAM_TYPE))){
					val = NumberUtils.parseDouble(rowData.get(Constants.SRC_TOLL_CHARGE))/100;	
				}
			}			
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	public void GSM_HIS_4(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		String code = "45000530";		
		stat.addHisItem(code, resourceType, bigType, sortIndex);
	}
	public void GSM_CUR_5(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){		
		String code = "45000540";
		String desc = "国际漫游费(单位:元)";
		double val = 0;
		if(!isHistory || (isHistory && hisQueryType == 1)){
			if("4".equals(rowData.get(Constants.SRC_ROAM_TYPE))){			
				val = NumberUtils.parseDouble(rowData.get(Constants.SRC_BASIC_CHARGE))/100;		
			}
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	
	public void GSM_HIS_5(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		String code = "45000540";
		stat.addHisItem(code, resourceType, bigType, sortIndex);
	}
	
	public void GSM_CUR_6(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){		
		String code = "45001480";
		String desc = "虚拟网通话费(单位:元)";
		double val = 0;
		if(!isHistory || (isHistory && hisQueryType == 1)){
			if("7".equals(rowData.get(Constants.SRC_SERVICE_TYPE))){			
				val = NumberUtils.parseDouble(rowData.get(Constants.SRC_BASIC_CHARGE))/100;		
			}
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	
	public void GSM_HIS_6(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		String code = "45001480";
		stat.addHisItem(code, resourceType, bigType, sortIndex);
	}
	
	public void GSM_CUR_7(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){		
		String code = "45000500";
		String desc = "分时分区通话费(单位:元)";
		double val = 0;
		if(!isHistory || (isHistory && hisQueryType == 1)){
			String roamType = rowData.get(Constants.SRC_ROAM_TYPE);
			if("4".equals(rowData.get(Constants.SRC_SERVICE_TYPE))  && !"2".equals(roamType) && !"3".equals(roamType)){			
				val = (NumberUtils.parseDouble(rowData.get(Constants.SRC_BASIC_CHARGE))+
						NumberUtils.parseDouble(rowData.get(Constants.SRC_TOLL_CHARGE))+
						NumberUtils.parseDouble(rowData.get(Constants.SRC_INFO_CHARGE)))/100;		
			}
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	
	public void GSM_HIS_7(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		String code = "45000500";
		stat.addHisItem(code, resourceType, bigType, sortIndex);
	}	
	
	public void GSM_CUR_8(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){		
		String code = "45001270";
		String desc = "港澳台长途费(单位:元)";
		double val = 0;
		if(!isHistory || (isHistory && hisQueryType == 1)){
			if("1".equals(rowData.get(Constants.SRC_EXTEND_ATTR_SHORTCODE1)) || "2".equals(rowData.get(Constants.SRC_USER_TYPE))){			
				if( "7".equals(rowData.get(Constants.SRC_ROAM_TYPE)) || "3".equals(rowData.get(Constants.SRC_HPLMN3))){
					val = NumberUtils.parseDouble(rowData.get(Constants.SRC_TOLL_CHARGE))/100;	
				}			
			}else{
				if("7".equals(rowData.get(Constants.SRC_ROAM_TYPE))){
					val = NumberUtils.parseDouble(rowData.get(Constants.SRC_TOLL_CHARGE))/100;	
				}	
			}

			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	
	public void GSM_HIS_8(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		String code = "45001270";
		stat.addHisItem(code, resourceType, bigType, sortIndex);
	}	
	
	public void GSM_CUR_9(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){		
		String code = "45001280";
		String desc = "港澳台漫游通话费(单位:元)";
		double val = 0;
		if(!isHistory || (isHistory && hisQueryType == 1)){			
			if( "7".equals(rowData.get(Constants.SRC_ROAM_TYPE))){
				val = NumberUtils.parseDouble(rowData.get(Constants.SRC_BASIC_CHARGE))/100;	
			}			
			
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	
	public void GSM_HIS_9(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		String code = "45001280";
		stat.addHisItem(code, resourceType, bigType, sortIndex);
	}
	
	public void GSM_CUR_10(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){		
		String code = "2130014";
		String desc = "信息费(单位:元)";
		double val = 0;
		if(!isHistory || (isHistory && hisQueryType == 1)){
			String SRC_INFO_CHARGE = rowData.get(Constants.SRC_INFO_CHARGE);
			if(SRC_INFO_CHARGE == null){
				SRC_INFO_CHARGE = "";
			}
			if( "0".compareTo(SRC_INFO_CHARGE)<0){
				val = NumberUtils.parseDouble(rowData.get(Constants.SRC_INFO_CHARGE))/100;	
			}			
			
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}
	}
	
	public void GSM_CUR_90(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){		
		/*String SRC_EXTEND_ATTR_LONGCODE3 = rowData.get(Constants.SRC_EXTEND_ATTR_LONGCODE3);
		String code = SRC_EXTEND_ATTR_LONGCODE3;	
		String desc = CacheProvider.tabFreeCode("FREERES_NAME",SRC_EXTEND_ATTR_LONGCODE3);
		double val = 0;
		String FREERES_TYPE = CacheProvider.tabFreeCode("FREERES_TYPE",SRC_EXTEND_ATTR_LONGCODE3);
		if( CacheProvider.tabFreeCode(SRC_EXTEND_ATTR_LONGCODE3) ){
			if("1".equals(FREERES_TYPE)){
				desc += "(单位:**小时**分**秒)";
			}else if ("2".equals(FREERES_TYPE) ){
				desc += "(单位:次)";
			}else if("3".equals(FREERES_TYPE) ){
				desc += "(单位:**MB**KB)";
			}else if( "4".equals(FREERES_TYPE) ){
				desc += "(单位:元)"; 
			}else{
				desc += "(单位:条)" ; 
			}
		}
		if(!isHistory || (isHistory && hisQueryType == 1)){	
			String SRC_EXTEND_ATTR_LONGCODE4 = rowData.get(Constants.SRC_EXTEND_ATTR_LONGCODE4);
			SRC_EXTEND_ATTR_LONGCODE4 = SRC_EXTEND_ATTR_LONGCODE4 == null ? "" : SRC_EXTEND_ATTR_LONGCODE4;
			if( "0".compareTo(SRC_EXTEND_ATTR_LONGCODE4)<0){
				if( CacheProvider.tabFreeCode(SRC_EXTEND_ATTR_LONGCODE3) ){
					if("1".equals(FREERES_TYPE)){
						val = NumberUtils.parseDouble(rowData.get(Constants.SRC_EXTEND_ATTR_LONGCODE4));	
					}else if ("2".equals(FREERES_TYPE) ){
						val = NumberUtils.parseDouble(rowData.get(Constants.SRC_EXTEND_ATTR_LONGCODE4));	
					}else if("3".equals(FREERES_TYPE) ){
						val = NumberUtils.parseDouble(rowData.get(Constants.SRC_EXTEND_ATTR_LONGCODE4));	
					}else if( "4".equals(FREERES_TYPE) ){
						val = NumberUtils.parseDouble(rowData.get(Constants.SRC_EXTEND_ATTR_LONGCODE4))/100;	
					}else{
						val = NumberUtils.parseDouble(rowData.get(Constants.SRC_EXTEND_ATTR_LONGCODE4));	
					}
				}
			}else{
				val = NumberUtils.parseDouble(rowData.get(Constants.SRC_EXTEND_ATTR_LONGCODE4));	
			}
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}*/
		sumCURResources(rowData, request, bigType, sumType, sortIndex, stat);
	}
	
	public void GSM_HIS_90(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		//String code = rowData.get(Constants.SRC_EXTEND_ATTR_LONGCODE3);
		//stat.addHisItem(code, resourceType, bigType, sortIndex);
		sumHisResources(rowData,request, bigType, resourceType, sortIndex, stat);
	}
	
	public void GSM_CUR_91(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){		
		/*String SRC_EXTEND_ATTR_LONGCODE1 = rowData.get(Constants.SRC_EXTEND_ATTR_LONGCODE1);
		String code = SRC_EXTEND_ATTR_LONGCODE1;
		String desc = CacheProvider.tabFreeCode("FREERES_NAME",SRC_EXTEND_ATTR_LONGCODE1);
		double val = 0;
		
		String FREERES_TYPE = CacheProvider.tabFreeCode("FREERES_TYPE",SRC_EXTEND_ATTR_LONGCODE1);
		if( CacheProvider.tabFreeCode(SRC_EXTEND_ATTR_LONGCODE1) ){
			if("1".equals(FREERES_TYPE)){
				desc += "(单位:**小时**分**秒)";
			}else if ("2".equals(FREERES_TYPE) ){
				desc += "(单位:次)";
			}else if("3".equals(FREERES_TYPE) ){
				desc += "(单位:**MB**KB)";
			}else if( "4".equals(FREERES_TYPE) ){
				desc += "(单位:元)"; 
			}else{
				desc += "(单位:条)" ; 
			}
		}
		if(!isHistory || (isHistory && hisQueryType == 1)){
		        String SRC_EXTEND_ATTR_LONGCODE2 = rowData.get(Constants.SRC_EXTEND_ATTR_LONGCODE2);
			if(SRC_EXTEND_ATTR_LONGCODE2 == null){
				SRC_EXTEND_ATTR_LONGCODE2 = "";
			}
			if( "0".compareTo(SRC_EXTEND_ATTR_LONGCODE2)<0){
				if( CacheProvider.tabFreeCode(SRC_EXTEND_ATTR_LONGCODE1) ){
					if("1".equals(FREERES_TYPE)){
						val = NumberUtils.parseDouble(rowData.get(Constants.SRC_EXTEND_ATTR_LONGCODE2));	
					}else if ("2".equals(FREERES_TYPE) ){
						val = NumberUtils.parseDouble(rowData.get(Constants.SRC_EXTEND_ATTR_LONGCODE2));	
					}else if("3".equals(FREERES_TYPE) ){
						val = NumberUtils.parseDouble(rowData.get(Constants.SRC_EXTEND_ATTR_LONGCODE2));	
					}else if( "4".equals(FREERES_TYPE) ){
						val = NumberUtils.parseDouble(rowData.get(Constants.SRC_EXTEND_ATTR_LONGCODE2))/100;	
					}else{
						val = NumberUtils.parseDouble(rowData.get(Constants.SRC_EXTEND_ATTR_LONGCODE2));	
					}
				}
			}else{
				val = NumberUtils.parseDouble(rowData.get(Constants.SRC_EXTEND_ATTR_LONGCODE2));	
			}
			
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}*/
	}
	
	public void GSM_HIS_91(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		//String code = rowData.get(Constants.SRC_EXTEND_ATTR_LONGCODE1);
		//stat.addHisItem(code, resourceType, bigType, sortIndex);
	}
	
	public void GSM_CUR_92(Map<String, String> rowData, DRProcessRequest request, String bigType, String sumType, int sortIndex, StatMetaDescriptor stat, 
			boolean isHistory, int hisQueryType){		
		/*String  SRC_FREERES_CODE = rowData.get(Constants.SRC_FREERES_CODE);
		String code =  SRC_FREERES_CODE;
		String desc = CacheProvider.tabFreeCode("FREERES_NAME",SRC_FREERES_CODE);
		double val = 0;
		String FREERES_TYPE = CacheProvider.tabFreeCode("FREERES_TYPE",SRC_FREERES_CODE);
		if( CacheProvider.tabFreeCode(SRC_FREERES_CODE) ){
			if("1".equals(FREERES_TYPE)){
				desc += "(单位:**小时**分**秒)";
			}else if ("2".equals(FREERES_TYPE) ){
				desc += "(单位:次)";
			}else if("3".equals(FREERES_TYPE) ){
				desc += "(单位:**MB**KB)";
			}else if( "4".equals(FREERES_TYPE) ){
				desc += "(单位:元)"; 
			}else{
				desc += "(单位:条)" ; 
			}
		}
		if(!isHistory || (isHistory && hisQueryType == 1)){
		        String SRC_FREERES_VAL = rowData.get(Constants.SRC_FREERES_VAL);
			if(SRC_FREERES_VAL == null){
				SRC_FREERES_VAL = "";
			}
			if( "0".compareTo(SRC_FREERES_VAL)<0){
				if( CacheProvider.tabFreeCode(SRC_FREERES_CODE) ){
					if("1".equals(FREERES_TYPE)){
						val = NumberUtils.parseDouble(rowData.get(Constants.SRC_FREERES_VAL));	
					}else if ("2".equals(FREERES_TYPE) ){
						val = NumberUtils.parseDouble(rowData.get(Constants.SRC_FREERES_VAL));	
					}else if("3".equals(FREERES_TYPE) ){
						val = NumberUtils.parseDouble(rowData.get(Constants.SRC_FREERES_VAL));	
					}else if( "4".equals(FREERES_TYPE) ){
						val = NumberUtils.parseDouble(rowData.get(Constants.SRC_FREERES_VAL))/100;	
					}else{
						val = NumberUtils.parseDouble(rowData.get(Constants.SRC_FREERES_VAL));	
					}
				}
			}else{
				val = NumberUtils.parseDouble(rowData.get(Constants.SRC_FREERES_VAL));	
			}
			
			StatMetaDescriptor meta = new StatMetaDescriptor(code, desc, val, sumType, bigType, sortIndex);
			stat.addCurItem(meta);
		}*/
	} 
	
	public void GSM_HIS_92(Map<String, String> rowData, DRProcessRequest request, String bigType, String resourceType, int sortIndex, StatMetaDescriptor stat){
		//String code = rowData.get(Constants.SRC_FREERES_CODE);
		//stat.addHisItem(code, resourceType, bigType, sortIndex);
	}